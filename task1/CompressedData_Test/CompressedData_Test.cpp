#include "../CompressedData/CompressedData.cpp"
#include "gtest/gtest.h"
TEST(DataCompressionTest, TestIsGoodCompressing)
{
	static constexpr Array2D<int> testArray{ {{0,0,0,1,1,2,3},{0,0,4,4,4,2,2},{2,2,2,2,2,1,2}} };
	const std::vector<Data<int>> expectedArray{ {
		{0,3},{1,2},{2,1},{3,1},{0,9},
		{0,2},{4,3},{2,2},{0,9},
		{2,5},{1,1},{2,1},{0,9},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16},{0,16}
	} };
	const std::optional<std::vector<Data<int>>> outputArray{ compressData(testArray) };
	ASSERT_EQ(outputArray, expectedArray);
}
TEST(DataCompressionTest, TestIsGoodCompressing2)
{
	static constexpr Array2D<int> testArray2{
		{{0,0,0,0,0,0,0},
		{0,0,4,4,4,4,1},
		{2,2,2,2,2,1,2},
		{1,2,3,4,5,6,7}} };
	const std::vector<Data<int>> expectedArray2{ {
		{0,16},
		{0,2},{4,4},{1,1},{0,9},
		{2,5},{1,1},{2,1},{0,9},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1}, {0,9},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},{0,16},
		{0,16},{0,16},{0,16},{0,16}
	} };
	

	const std::optional<std::vector<Data<int>>> outputArray{ compressData(testArray2) };
	ASSERT_EQ(outputArray, expectedArray2);
}
TEST(DataCompressionTest, TestIsCompressedDataSmaller)
{
	static constexpr Array2D<int> testArray3{ {
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},
		}};
	const std::vector<Data<int>> expectedArray3{ {
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1},
		{1,1},{2,1},{3,1},{4,1},{5,1},{6,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,1},{14,1},{15,1},{16,1}
	} };


	const std::optional<std::vector<Data<int>>> outputArray{ compressData(testArray3) };
	ASSERT_EQ(outputArray, std::nullopt);
}

int main()
{
	RUN_ALL_TESTS();
	std::cin.get();
}